# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gcr.io/joshpaulchan/pantheon-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.11.0

# describe the component this chart is for - an api, a worker, etc.
component: "api"

app:
  config: {}
  secrets: {}
  
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  annotations:
    "iam.gke.io/gcp-service-account": pantheon@joshpaulchan.iam.gserviceaccount.com
  gke:
    # NOTE: this should be disabled for now. It should in theory, after creating the service account, bind the KSA to the GSA
    # via a post-install/post-upgrade hook, and similarly unbind the KSA on post-uninstall. However (1) the authentication
    # is unimplemented in the hook, and (2) the post-uninstall hook is also unimplemented but would also need google credentials
    # to perform the operation.
    bindKSAToGSA: false
  name: "pantheon"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  annotations:
    "cert-manager.io/issuer": letsencrypt-prod
  # the full domain will be <subDomain>.<releaseName>.<topLevelDomain>
  subDomain: ""
  topLevelDomain: "pantheon.joshpaulchan.com"
  tlsEnabled: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 2

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  enabled: true
  # NOTE: we don't support externally managed Redis atm.
  parentComponent: ""
  service:
    port: 6379
  auth:
    enabled: false

postgresql:
  managedByApp: false
  gcpProxy:
    # It is recommended to use the latest version of the Cloud SQL proxy
    # Make sure to update on a regular schedule!
    enabled: true
    image:
      repository: gcr.io/cloudsql-docker/gce-proxy
      tag: 1.17
      command:
        - "/cloud_sql_proxy"
        - "-instances=joshpaulchan:us-central1:gohort-pg-prod-db=tcp:5432"
  service:
    port: 5432