apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.component }}
  namespace: {{ .Release.Namespace }}
  labels:
{{- include "chart.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "chart.labels" . | indent 6 }}
  strategy: {}
  template:
    metadata:
      labels:
{{- include "chart.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Release.Name }}-{{ .Values.component }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-{{ .Values.component }}
            - secretRef:
                name: {{ .Release.Name }}-{{ .Values.component }}
          {{- if .Values.image.command }}
          command:
            {{- range .Values.image.command }}
            - {{ . }}
            {{- end }}
          {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              path: /healthcheck/
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{- $relname := print .Release.Name "-postgresql" -}}
        {{- with .Values.postgresql }}
        {{- if not .managedByApp }}
        - name: {{ $relname }}
          image: {{ .gcpProxy.image.repository }}:{{ .gcpProxy.image.tag }}
          {{- if .gcpProxy.image.command }}
          command:
            {{- range .gcpProxy.image.command }}
            - {{ . }}
            {{- end }}
          {{- end }}
        {{end}}
        {{end}}
status: {}